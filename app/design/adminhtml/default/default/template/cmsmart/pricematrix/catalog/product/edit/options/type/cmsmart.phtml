<?php
/**
 * @author Pham Hong Thanh
 * @email thanhpham0990@gmail.com
 * @skype thanhpham170990
 */

?>
<!--thanh-->

<?php if(Mage::helper('cmsmart_pricematrix')->isEnabled()):?>
    <script type="text/javascript">
        //<![CDATA[
        OptionTemplateCmsmart = '<table class="border" cellpadding="0" cellspacing="0">'+
            '<input type="hidden" class="required-option-cmsmart-type-rows" name="validation_{{option_id}}_result" value="" >'+
            '<thead>'+
            '<tr class="headings">'+
            '<th class="type-title"><?php echo Mage::helper('catalog')->__('Title') ?> <span class="required">*</span></th>'+
            <?php if ($this->getCanReadPrice() !== false) : ?>
            '<th class="type-price"><?php echo Mage::helper('catalog')->__('Price') ?></th>' +
            '<th class="type-type"><?php echo Mage::helper('catalog')->__('Price Type') ?></th>' +
            <?php endif; ?>
            '<th class="type-sku"><?php echo Mage::helper('catalog')->__('SKU') ?></th>'+
            '<th class="type-order"><?php echo Mage::helper('catalog')->__('Sort Order') ?></th>'+
            '<th class="type-butt last">&nbsp;</th>'+
            '</tr>'+
            '</thead>'+
            '<tbody id="cmsmart_option_type_row_{{option_id}}">'+
            '</tbody>'+
            '<tfoot>'+
            '<tr>'+
            '<td colspan="100" class="a-right"><?php echo $this->getAddButtonHtml() ?></td>'+
            '</tr>'+
            '</tfoot>'+
            '</table>';

        OptionTemplateCmsmartRow = '<tr id="product_option_{{id}}_cmsmart_{{cmsmart_id}}">'+
            '<td>'+
            '<input type="hidden" name="product[options][{{id}}][values][{{cmsmart_id}}][option_type_id]" value="{{option_type_id}}">'+
            '<input type="hidden" id="product_option_{{id}}_cmsmart_{{cmsmart_id}}_is_delete" name="product[options][{{id}}][values][{{cmsmart_id}}][is_delete]" value="">'+
            '<input type="text" class="required-entry input-text cmsmart-type-title" id="product_option_{{id}}_cmsmart_{{cmsmart_id}}_title" name="product[options][{{id}}][values][{{cmsmart_id}}][title]" value="{{title}}">{{checkboxScopeTitle}}</td>'+
            <?php if ($this->getCanReadPrice() !== false) : ?>
            '<td><input type="text" class="input-text validate-number product-option-price" id="product_option_{{id}}_cmsmart_{{cmsmart_id}}_price" name="product[options][{{id}}][values][{{cmsmart_id}}][price]" value="{{price}}"<?php if ($this->getCanEditPrice() === false) : ?> disabled="disabled"<?php endif; ?>></td>' +
            '<td><?php echo $this->getPriceTypeSelectHtml() ?>{{checkboxScopePrice}}</td>' +
            <?php else : ?>
            '<input type="hidden" id="product_option_{{id}}_cmsmart_{{cmsmart_id}}_price" name="product[options][{{id}}][values][{{cmsmart_id}}][price]">' +
            '<input type="hidden" name="product[options][{{id}}][values][{{cmsmart_id}}][price_type]" id="product_option_{{id}}_cmsmart_{{cmsmart_id}}_price_type">' +
            <?php endif; ?>
            '<td><input type="text" class="input-text" name="product[options][{{id}}][values][{{cmsmart_id}}][sku]" value="{{sku}}"></td>'+
            '<td><input type="text" class="validate-zero-or-greater input-text" name="product[options][{{id}}][values][{{cmsmart_id}}][sort_order]" value="{{sort_order}}"></td>'+
            '<td class="last"><span title="Delete row"><?php echo $this->getDeleteButtonHtml() ?></span></td>'+
            '</tr>';

        cmsmartOptionType = {
            div : 'cmsmart_option_type_row',
            itemCount : 0,
            templateSyntax : /(^|.|\r|\n)({{(\w+)}})/,
            templateText : OptionTemplateCmsmartRow,
            add : function(data) {

                this.template = new Template(this.templateText, this.templateSyntax);

                if (data.target || data.srcElement) {//data is Event (work in IE and Firefox)
                    element = $(Event.findElement(data, 'button'));
                    optionId = element.readAttribute('id').sub('add_cmsmart_row_button_', '');
                    data = {};
                    data.option_type_id = '-1';
                    data.cmsmart_id = this.itemCount;
                } else {
                    optionId = data.option_id;
                    data.cmsmart_id = data.option_type_id;
                    this.itemCount = data.item_count;
                }

                data.id  = optionId;

                Element.insert($(this.div+'_'+data.id), {'bottom':this.template.evaluate(data)});

                if (data.checkboxScopeTitle) {
                    //set disabled
                    if ($('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_title') && data.scopeTitleDisabled) {
                        $('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_title').disable();
                    }
                }
                if (data.checkboxScopePrice) {
                    //set disabled
                    if ($('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_price') && data.scopePriceDisabled) {
                        $('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_price').disable();
                        $('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_price_type').disable();
                    }
                }

                if (data.price_type) {
                    $A($('product_option_'+data.id+'_cmsmart_'+data.cmsmart_id+'_price_type').options).each(function(option){
                        if (option.value==data.price_type) option.selected = true;
                    });
                }

                this.itemCount++;
                this.bindRemoveButtons();
            },
            remove : function(event){
                var element = $(Event.findElement(event, 'tr'));

                if(element){
                    $(element.readAttribute('id')+'_is_delete').value = '1';
                    element.addClassName('no-display');
                    element.addClassName('ignore-validate');
                    element.hide();
                }
            },
            bindRemoveButtons : function(){
                var buttons = $$('.delete-cmsmart-row');
                for(var i=0;i<buttons.length;i++){
                    if(!$(buttons[i]).binded){
                        $(buttons[i]).binded = true;
                        Event.observe(buttons[i], 'click', this.remove.bind(this));
                    }
                }
            },

            bindAddButton : function()
            {
                var buttons = $$('.add-cmsmart-row');
                for(var i=0;i<buttons.length;i++){
                    if(!$(buttons[i]).binded){
                        $(buttons[i]).binded = true;
                        Event.observe(buttons[i], 'click', this.add.bind(this));
                    }
                }
            }
        }

        if ($('option_panel_type_cmsmart')) {
            $('option_panel_type_cmsmart').remove();
        }

        cmsmartOptionType.bindRemoveButtons();

        Validation.addAllThese([
            ['required-option-cmsmart-type-rows', <?php echo $this->helper('core')->jsonEncode(Mage::helper('catalog')->__('Please add rows to option.')); ?>, function(v, elm) {
                var optionContainerElm = elm.up('div.grid');
                var cmsmartTypesFlag = false;
                cmsmartTypeElements = $$('#'+optionContainerElm.id+' .cmsmart-type-title');
                cmsmartTypeElements.each(function(elm){
                    if (elm.id && elm.up('tr').visible()) {
                        cmsmartTypesFlag = true;
                    }
                });
                elm.advaiceContainer = optionContainerElm.id+'_advice';
                return cmsmartTypesFlag;
            }]]);

        if($('add_cmsmart_row_button')){
            Event.observe('add_cmsmart_row_button', 'click', cmsmartOptionType.add.bind(cmsmartOptionType));
        }
        //]]>
    </script>
<?php endif;?>

